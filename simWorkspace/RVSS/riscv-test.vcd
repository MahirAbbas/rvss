$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $scope module RVSS $end
   $var wire 1 > clk $end
   $var wire 1 ? reset $end
   $var wire 3 #! InstrFormat_R [2:0] $end
   $var wire 3 $! InstrFormat_I [2:0] $end
   $var wire 3 %! InstrFormat_S [2:0] $end
   $var wire 3 &! InstrFormat_B [2:0] $end
   $var wire 3 '! InstrFormat_U [2:0] $end
   $var wire 3 (! InstrFormat_J [2:0] $end
   $var wire 3 )! InstrFormat_UNDEF [2:0] $end
   $var wire 1 9 control_1_io_PCSrc $end
   $var wire 2 % control_1_io_resultSrc [1:0] $end
   $var wire 1 & control_1_io_memWrite $end
   $var wire 3 ' control_1_io_ALUControl [2:0] $end
   $var wire 1 ( control_1_io_ALUSrc $end
   $var wire 3 ) control_1_io_immItype [2:0] $end
   $var wire 1 * control_1_io_regWrite $end
   $var wire 32 @ datapath_1_io_instruction [31:0] $end
   $var wire 1 : datapath_1_io_zero $end
   $scope module control_1 $end
    $var wire 32 @ io_instrucion [31:0] $end
    $var wire 1 9 io_PCSrc $end
    $var wire 2 % io_resultSrc [1:0] $end
    $var wire 1 & io_memWrite $end
    $var wire 3 ' io_ALUControl [2:0] $end
    $var wire 1 ( io_ALUSrc $end
    $var wire 3 ) io_immItype [2:0] $end
    $var wire 1 * io_regWrite $end
    $var wire 1 : io_zero $end
    $var wire 1 > clk $end
    $var wire 1 ? reset $end
    $var wire 3 #! InstrFormat_R [2:0] $end
    $var wire 3 $! InstrFormat_I [2:0] $end
    $var wire 3 %! InstrFormat_S [2:0] $end
    $var wire 3 &! InstrFormat_B [2:0] $end
    $var wire 3 '! InstrFormat_U [2:0] $end
    $var wire 3 (! InstrFormat_J [2:0] $end
    $var wire 3 )! InstrFormat_UNDEF [2:0] $end
    $var wire 6 ,! OpCode_LUI [5:0] $end
    $var wire 6 -! OpCode_AUIPC [5:0] $end
    $var wire 6 .! OpCode_JAL [5:0] $end
    $var wire 6 /! OpCode_JALR [5:0] $end
    $var wire 6 0! OpCode_BEQ [5:0] $end
    $var wire 6 1! OpCode_BNE [5:0] $end
    $var wire 6 2! OpCode_BLT [5:0] $end
    $var wire 6 3! OpCode_BGE [5:0] $end
    $var wire 6 4! OpCode_BLTU [5:0] $end
    $var wire 6 5! OpCode_BGEU [5:0] $end
    $var wire 6 6! OpCode_LB [5:0] $end
    $var wire 6 7! OpCode_LH [5:0] $end
    $var wire 6 8! OpCode_LW [5:0] $end
    $var wire 6 9! OpCode_LBU [5:0] $end
    $var wire 6 :! OpCode_LHU [5:0] $end
    $var wire 6 ;! OpCode_SB [5:0] $end
    $var wire 6 <! OpCode_SH [5:0] $end
    $var wire 6 =! OpCode_SW [5:0] $end
    $var wire 6 >! OpCode_ADDI [5:0] $end
    $var wire 6 ?! OpCode_SLTI [5:0] $end
    $var wire 6 @! OpCode_SLTIU [5:0] $end
    $var wire 6 A! OpCode_XORI [5:0] $end
    $var wire 6 B! OpCode_ORI [5:0] $end
    $var wire 6 C! OpCode_ANDI [5:0] $end
    $var wire 6 D! OpCode_SLLI [5:0] $end
    $var wire 6 E! OpCode_SRLI [5:0] $end
    $var wire 6 F! OpCode_SRAI [5:0] $end
    $var wire 6 G! OpCode_ADD [5:0] $end
    $var wire 6 H! OpCode_SUB [5:0] $end
    $var wire 6 I! OpCode_SLL_1 [5:0] $end
    $var wire 6 J! OpCode_SLT [5:0] $end
    $var wire 6 K! OpCode_SLTU [5:0] $end
    $var wire 6 L! OpCode_XOR_1 [5:0] $end
    $var wire 6 M! OpCode_SRL_1 [5:0] $end
    $var wire 6 N! OpCode_SRA_1 [5:0] $end
    $var wire 6 O! OpCode_OR_1 [5:0] $end
    $var wire 6 P! OpCode_AND_1 [5:0] $end
    $var wire 6 Q! OpCode_FENCE [5:0] $end
    $var wire 6 R! OpCode_NOOP [5:0] $end
    $var wire 6 E decode_1_io_operation [5:0] $end
    $var wire 3 ) decode_1_io_outInstrFormat [2:0] $end
    $var wire 1 / when_Control_l34 $end
    $var wire 1 0 when_Control_l41 $end
    $var wire 1 F when_Control_l64 $end
    $var wire 1 G when_Control_l71 $end
    $var wire 1 H when_Control_l78 $end
    $var wire 1 I when_Control_l87 $end
    $var wire 1 J when_Control_l98 $end
    $var wire 1 K when_Control_l101 $end
    $var wire 1 L when_Control_l104 $end
    $var wire 1 M when_Control_l107 $end
    $var wire 1 N when_Control_l110 $end
    $var wire 40 1 io_immItype_string [39:0] $end
    $scope module decode_1 $end
     $var wire 32 @ io_instr [31:0] $end
     $var wire 6 E io_operation [5:0] $end
     $var wire 3 ) io_outInstrFormat [2:0] $end
     $var wire 1 > clk $end
     $var wire 1 ? reset $end
     $var wire 6 ,! OpCode_LUI [5:0] $end
     $var wire 6 -! OpCode_AUIPC [5:0] $end
     $var wire 6 .! OpCode_JAL [5:0] $end
     $var wire 6 /! OpCode_JALR [5:0] $end
     $var wire 6 0! OpCode_BEQ [5:0] $end
     $var wire 6 1! OpCode_BNE [5:0] $end
     $var wire 6 2! OpCode_BLT [5:0] $end
     $var wire 6 3! OpCode_BGE [5:0] $end
     $var wire 6 4! OpCode_BLTU [5:0] $end
     $var wire 6 5! OpCode_BGEU [5:0] $end
     $var wire 6 6! OpCode_LB [5:0] $end
     $var wire 6 7! OpCode_LH [5:0] $end
     $var wire 6 8! OpCode_LW [5:0] $end
     $var wire 6 9! OpCode_LBU [5:0] $end
     $var wire 6 :! OpCode_LHU [5:0] $end
     $var wire 6 ;! OpCode_SB [5:0] $end
     $var wire 6 <! OpCode_SH [5:0] $end
     $var wire 6 =! OpCode_SW [5:0] $end
     $var wire 6 >! OpCode_ADDI [5:0] $end
     $var wire 6 ?! OpCode_SLTI [5:0] $end
     $var wire 6 @! OpCode_SLTIU [5:0] $end
     $var wire 6 A! OpCode_XORI [5:0] $end
     $var wire 6 B! OpCode_ORI [5:0] $end
     $var wire 6 C! OpCode_ANDI [5:0] $end
     $var wire 6 D! OpCode_SLLI [5:0] $end
     $var wire 6 E! OpCode_SRLI [5:0] $end
     $var wire 6 F! OpCode_SRAI [5:0] $end
     $var wire 6 G! OpCode_ADD [5:0] $end
     $var wire 6 H! OpCode_SUB [5:0] $end
     $var wire 6 I! OpCode_SLL_1 [5:0] $end
     $var wire 6 J! OpCode_SLT [5:0] $end
     $var wire 6 K! OpCode_SLTU [5:0] $end
     $var wire 6 L! OpCode_XOR_1 [5:0] $end
     $var wire 6 M! OpCode_SRL_1 [5:0] $end
     $var wire 6 N! OpCode_SRA_1 [5:0] $end
     $var wire 6 O! OpCode_OR_1 [5:0] $end
     $var wire 6 P! OpCode_AND_1 [5:0] $end
     $var wire 6 Q! OpCode_FENCE [5:0] $end
     $var wire 6 R! OpCode_NOOP [5:0] $end
     $var wire 3 #! InstrFormat_R [2:0] $end
     $var wire 3 $! InstrFormat_I [2:0] $end
     $var wire 3 %! InstrFormat_S [2:0] $end
     $var wire 3 &! InstrFormat_B [2:0] $end
     $var wire 3 '! InstrFormat_U [2:0] $end
     $var wire 3 (! InstrFormat_J [2:0] $end
     $var wire 3 )! InstrFormat_UNDEF [2:0] $end
     $var wire 6 S! register_1 [5:0] $end
     $var wire 7 Z decodeInstrBits_opcode [6:0] $end
     $var wire 3 [ decodeInstrBits_funct3 [2:0] $end
     $var wire 7 \ decodeInstrBits_funct7 [6:0] $end
     $var wire 1 ] when_Decode_l45 $end
     $var wire 40 5 io_operation_string [39:0] $end
     $var wire 40 7 io_outInstrFormat_string [39:0] $end
     $var wire 40 # register_1_string [39:0] $end
    $upscope $end
   $upscope $end
   $scope module datapath_1 $end
    $var wire 1 9 io_PCSrc $end
    $var wire 2 % io_ResultSrc [1:0] $end
    $var wire 1 & io_MemWrite $end
    $var wire 3 ' io_ALUControl [2:0] $end
    $var wire 1 ( io_ALUSrc $end
    $var wire 1 * io_RegWrite $end
    $var wire 3 ) io_itype [2:0] $end
    $var wire 32 @ io_instruction [31:0] $end
    $var wire 1 : io_zero $end
    $var wire 1 > clk $end
    $var wire 1 ? reset $end
    $var wire 3 #! InstrFormat_R [2:0] $end
    $var wire 3 $! InstrFormat_I [2:0] $end
    $var wire 3 %! InstrFormat_S [2:0] $end
    $var wire 3 &! InstrFormat_B [2:0] $end
    $var wire 3 '! InstrFormat_U [2:0] $end
    $var wire 3 (! InstrFormat_J [2:0] $end
    $var wire 3 )! InstrFormat_UNDEF [2:0] $end
    $var wire 1 *! memory_1_io_resultSrc $end
    $var wire 32 @ fetch_1_io_instruction [31:0] $end
    $var wire 32 A fetch_1_io_PC [31:0] $end
    $var wire 32 + datapathDecode_1_io_extended [31:0] $end
    $var wire 32 B datapathDecode_1_io_RD1E [31:0] $end
    $var wire 32 C datapathDecode_1_io_RD2E [31:0] $end
    $var wire 32 C execute_1_io_RD2WriteData [31:0] $end
    $var wire 32 ; execute_1_io_aluResult [31:0] $end
    $var wire 1 : execute_1_io_zero $end
    $var wire 32 D memory_1_io_result [31:0] $end
    $var wire 32 , PCTarget [31:0] $end
    $var wire 32 +! branch_immediate [31:0] $end
    $var wire 40 - io_itype_string [39:0] $end
    $scope module fetch_1 $end
     $var wire 1 9 io_branch $end
     $var wire 32 , io_branchTarget [31:0] $end
     $var wire 32 @ io_instruction [31:0] $end
     $var wire 32 A io_PC [31:0] $end
     $var wire 1 > clk $end
     $var wire 1 ? reset $end
     $var wire 32 A programCounter [31:0] $end
     $var wire 32 Y PCNext [31:0] $end
     $var wire 32 < PCPlus4 [31:0] $end
    $upscope $end
    $scope module datapathDecode_1 $end
     $var wire 32 @ io_instr [31:0] $end
     $var wire 1 * io_writeEnable $end
     $var wire 3 ) io_itype [2:0] $end
     $var wire 32 + io_extended [31:0] $end
     $var wire 32 B io_RD1E [31:0] $end
     $var wire 32 C io_RD2E [31:0] $end
     $var wire 32 P io_WD3E [31:0] $end
     $var wire 1 > clk $end
     $var wire 1 ? reset $end
     $var wire 3 #! InstrFormat_R [2:0] $end
     $var wire 3 $! InstrFormat_I [2:0] $end
     $var wire 3 %! InstrFormat_S [2:0] $end
     $var wire 3 &! InstrFormat_B [2:0] $end
     $var wire 3 '! InstrFormat_U [2:0] $end
     $var wire 3 (! InstrFormat_J [2:0] $end
     $var wire 3 )! InstrFormat_UNDEF [2:0] $end
     $var wire 5 Q regFile_1_io_readAddress1 [4:0] $end
     $var wire 5 R regFile_1_io_readAddress2 [4:0] $end
     $var wire 5 S regFile_1_io_writeAddress3 [4:0] $end
     $var wire 32 B regFile_1_io_readData1 [31:0] $end
     $var wire 32 C regFile_1_io_readData2 [31:0] $end
     $var wire 12 T i_imm [11:0] $end
     $var wire 12 U s_imm [11:0] $end
     $var wire 13 V b_imm [12:0] $end
     $var wire 20 W u_imm [19:0] $end
     $var wire 21 X j_imm [20:0] $end
     $var wire 40 3 io_itype_string [39:0] $end
     $scope module regFile_1 $end
      $var wire 1 * io_writeEnable3 $end
      $var wire 5 Q io_readAddress1 [4:0] $end
      $var wire 5 R io_readAddress2 [4:0] $end
      $var wire 32 B io_readData1 [31:0] $end
      $var wire 32 C io_readData2 [31:0] $end
      $var wire 5 S io_writeAddress3 [4:0] $end
      $var wire 32 P io_writeData3 [31:0] $end
      $var wire 1 > clk $end
      $var wire 1 ? reset $end
      $var wire 32 a regFile_1[0] [31:0] $end
      $var wire 32 b regFile_1[1] [31:0] $end
      $var wire 32 c regFile_1[2] [31:0] $end
      $var wire 32 d regFile_1[3] [31:0] $end
      $var wire 32 e regFile_1[4] [31:0] $end
      $var wire 32 f regFile_1[5] [31:0] $end
      $var wire 32 g regFile_1[6] [31:0] $end
      $var wire 32 h regFile_1[7] [31:0] $end
      $var wire 32 i regFile_1[8] [31:0] $end
      $var wire 32 j regFile_1[9] [31:0] $end
      $var wire 32 k regFile_1[10] [31:0] $end
      $var wire 32 l regFile_1[11] [31:0] $end
      $var wire 32 m regFile_1[12] [31:0] $end
      $var wire 32 n regFile_1[13] [31:0] $end
      $var wire 32 o regFile_1[14] [31:0] $end
      $var wire 32 p regFile_1[15] [31:0] $end
      $var wire 32 q regFile_1[16] [31:0] $end
      $var wire 32 r regFile_1[17] [31:0] $end
      $var wire 32 s regFile_1[18] [31:0] $end
      $var wire 32 t regFile_1[19] [31:0] $end
      $var wire 32 u regFile_1[20] [31:0] $end
      $var wire 32 v regFile_1[21] [31:0] $end
      $var wire 32 w regFile_1[22] [31:0] $end
      $var wire 32 x regFile_1[23] [31:0] $end
      $var wire 32 y regFile_1[24] [31:0] $end
      $var wire 32 z regFile_1[25] [31:0] $end
      $var wire 32 { regFile_1[26] [31:0] $end
      $var wire 32 | regFile_1[27] [31:0] $end
      $var wire 32 } regFile_1[28] [31:0] $end
      $var wire 32 ~ regFile_1[29] [31:0] $end
      $var wire 32 !! regFile_1[30] [31:0] $end
      $var wire 32 "! regFile_1[31] [31:0] $end
     $upscope $end
    $upscope $end
    $scope module execute_1 $end
     $var wire 32 B io_RD1E [31:0] $end
     $var wire 32 C io_RD2E [31:0] $end
     $var wire 32 + io_immExt [31:0] $end
     $var wire 1 ( io_aluSrc $end
     $var wire 3 ' io_aluControl [2:0] $end
     $var wire 32 C io_RD2WriteData [31:0] $end
     $var wire 32 ; io_aluResult [31:0] $end
     $var wire 1 : io_zero $end
     $var wire 32 O alu_1_io_SrcB [31:0] $end
     $var wire 32 ; alu_1_io_ALUResult [31:0] $end
     $var wire 1 : alu_1_io_zero $end
     $scope module alu_1 $end
      $var wire 32 ^ io_SrcA [31:0] $end
      $var wire 32 _ io_SrcB [31:0] $end
      $var wire 3 ' io_ALUControl [2:0] $end
      $var wire 32 ; io_ALUResult [31:0] $end
      $var wire 1 : io_zero $end
      $var wire 1 = when_ALU_l15 $end
      $var wire 1 ` when_ALU_l37 $end
     $upscope $end
    $upscope $end
    $scope module memory_1 $end
     $var wire 32 ; io_aluResult [31:0] $end
     $var wire 32 C io_writeData [31:0] $end
     $var wire 32 D io_result [31:0] $end
     $var wire 1 & io_memWrite $end
     $var wire 1 *! io_resultSrc $end
     $var wire 1 > clk $end
     $var wire 1 ? reset $end
    $upscope $end
   $upscope $end
  $upscope $end
  $var wire 1 > clk $end
  $var wire 1 ? reset $end
 $upscope $end
$enddefinitions $end


#0
b0101001101001100010011000100100100100000 #
b00 %
0&
b000 '
1(
b001 )
1*
b00000000000000000000000000000101 +
b00000000000000000000000000000001 ,
b0100100100100000001000000010000000100000 -
0/
10
b0100100100100000001000000010000000100000 1
b0100100100100000001000000010000000100000 3
b0100000101000100010001000100100100100000 5
b0100100100100000001000000010000000100000 7
09
0:
b00000000000000000000000000000101 ;
b00000000000000000000000000000001 <
0=
0>
1?
b00000000010100000000000100010011 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
b010010 E
0F
0G
0H
0I
0J
0K
0L
0M
0N
b00000000000000000000000000000101 O
b00000000000000000000000000000101 P
b00000 Q
b00101 R
b00010 S
b000000000101 T
b000000000010 U
b0000000000010 V
b00000000010100000000 W
b000000000100000000100 X
b00000000000000000000000000000001 Y
b0010011 Z
b000 [
b0000000 \
1]
b00000000000000000000000000000000 ^
b00000000000000000000000000000101 _
1`
b00000000000000000000000000000000 a
b00000000000000000000000000000000 b
b00000000000000000000000000000000 c
b00000000000000000000000000000000 d
b00000000000000000000000000000000 e
b00000000000000000000000000000000 f
b00000000000000000000000000000000 g
b00000000000000000000000000000000 h
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b00000000000000000000000000000000 n
b00000000000000000000000000000000 o
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
b00000000000000000000000000000000 r
b00000000000000000000000000000000 s
b00000000000000000000000000000000 t
b00000000000000000000000000000000 u
b00000000000000000000000000000000 v
b00000000000000000000000000000000 w
b00000000000000000000000000000000 x
b00000000000000000000000000000000 y
b00000000000000000000000000000000 z
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
b00000000000000000000000000000000 }
b00000000000000000000000000000000 ~
b00000000000000000000000000000000 !!
b00000000000000000000000000000000 "!
b000 #!
b001 $!
b010 %!
b011 &!
b100 '!
b101 (!
b110 )!
1*!
b10000000100011011111010010100000 +!
b000000 ,!
b000001 -!
b000010 .!
b000011 /!
b000100 0!
b000101 1!
b000110 2!
b000111 3!
b001000 4!
b001001 5!
b001010 6!
b001011 7!
b001100 8!
b001101 9!
b001110 :!
b001111 ;!
b010000 <!
b010001 =!
b010010 >!
b010011 ?!
b010100 @!
b010101 A!
b010110 B!
b010111 C!
b011000 D!
b011001 E!
b011010 F!
b011011 G!
b011100 H!
b011101 I!
b011110 J!
b011111 K!
b100000 L!
b100001 M!
b100010 N!
b100011 O!
b100100 P!
b100101 Q!
b100110 R!
b011000 S!
#144
0?
#153
b00000000000000000000000000001100 +
b00000000000000000000000000000100 ,
b00000000000000000000000000001100 ;
b00000000000000000000000000000010 <
1>
b00000000110000000000000110010011 @
b00000000000000000000000000000001 A
b00000000000000000000000000001100 O
b00000000000000000000000000001100 P
b01100 R
b00011 S
b000000001100 T
b000000000011 U
b0100000000010 V
b00000000110000000000 W
b000000000000000001100 X
b00000000000000000000000000000010 Y
b00000000000000000000000000001100 _
b00000000000000000000000000000101 c
#157
0>
#161
b11111111111111111111111111110111 +
b00111111111111111111111111111111 ,
b00000000000000000000000000000011 ;
b00000000000000000000000000000011 <
1>
b11111111011100011000001110010011 @
b00000000000000000000000000000010 A
b00000000000000000000000000001100 B
b11111111111111111111111111110111 O
b00000000000000000000000000000011 P
b00011 Q
b10111 R
b00111 S
b111111110111 T
b111111100111 U
b1111111100110 V
b11111111011100011000 W
b100011000111111110110 X
b00000000000000000000000000000011 Y
b1111111 \
0]
b00000000000000000000000000001100 ^
b11111111111111111111111111110111 _
0`
b00000000000000000000000000001100 d
#165
0>
#169
b110 '
0(
b000 )
b00000000000000000000000000000000 +
b00000000000000000000000000000011 ,
b0101001000100000001000000010000000100000 -
1/
00
b0101001000100000001000000010000000100000 1
b0101001000100000001000000010000000100000 3
b0100111101010010010111110011000100100000 5
b0101001000100000001000000010000000100000 7
b00000000000000000000000000000111 ;
b00000000000000000000000000000100 <
1>
b00000000001000111110001000110011 @
b00000000000000000000000000000011 A
b00000000000000000000000000000011 B
b00000000000000000000000000000101 C
b100011 E
1M
b00000000000000000000000000000101 O
b00000000000000000000000000000111 P
b00111 Q
b00010 R
b00100 S
b000000000010 T
b000000000100 U
b0000000000100 V
b00000000001000111110 W
b000111110000000000010 X
b00000000000000000000000000000100 Y
b0110011 Z
b110 [
b0000000 \
1]
b00000000000000000000000000000011 ^
b00000000000000000000000000000101 _
1`
b00000000000000000000000000000011 h
#173
0>
#177
b111 '
b00000000000000000000000000000100 ,
b0100000101001110010001000101111100110001 5
b00000000000000000000000000000100 ;
b00000000000000000000000000000101 <
1>
b00000000010000011111001010110011 @
b00000000000000000000000000000100 A
b00000000000000000000000000001100 B
b00000000000000000000000000000111 C
b100100 E
0M
1N
b00000000000000000000000000000111 O
b00000000000000000000000000000100 P
b00011 Q
b00100 R
b00101 S
b000000000100 T
b000000000101 U
b0100000000100 V
b00000000010000011111 W
b000011111000000000100 X
b00000000000000000000000000000101 Y
b111 [
b00000000000000000000000000001100 ^
b00000000000000000000000000000111 _
0`
b00000000000000000000000000000111 e
#181
0>
#185
b000 '
b00000000000000000000000000000101 ,
b0100000101000100010001000010000000100000 5
b00000000000000000000000000001011 ;
b00000000000000000000000000000110 <
1>
b00000000010000101000001010110011 @
b00000000000000000000000000000101 A
b00000000000000000000000000000100 B
b011011 E
1J
0N
b00000000000000000000000000001011 P
b00101 Q
b00000000010000101000 W
b000101000000000000100 X
b00000000000000000000000000000110 Y
b000 [
b00000000000000000000000000000100 ^
1`
b00000000000000000000000000000100 f
#189
0>
#193
b001 '
b011 )
0*
b00000000000000000000000000110000 +
b00000000000000000000000000010010 ,
b0100001000100000001000000010000000100000 -
0/
b0100001000100000001000000010000000100000 1
b0100001000100000001000000010000000100000 3
b0100001001000101010100010010000000100000 5
b0100001000100000001000000010000000100000 7
b00000000000000000000000000001000 ;
b00000000000000000000000000000111 <
1>
b00000010011100101000100001100011 @
b00000000000000000000000000000110 A
b00000000000000000000000000001011 B
b00000000000000000000000000000011 C
b000100 E
1H
0J
b00000000000000000000000000000011 O
b00000000000000000000000000001000 P
b00111 R
b10000 S
b000000100111 T
b000000110000 U
b0000000110000 V
b00000010011100101000 W
b000101000100000100110 X
b00000000000000000000000000000111 Y
b1100011 Z
b0000001 \
0]
b00000000000000000000000000001011 ^
b00000000000000000000000000000011 _
0`
b00000000000000000000000000001011 f
#197
0>
#201
b010 '
b000 )
1*
b00000000000000000000000000000000 +
b00000000000000000000000000000111 ,
b0101001000100000001000000010000000100000 -
1/
b0101001000100000001000000010000000100000 1
b0101001000100000001000000010000000100000 3
b0101001101001100010101000010000000100000 5
b0101001000100000001000000010000000100000 7
1:
b00000000000000000000000000000000 ;
b00000000000000000000000000001000 <
1=
1>
b00000000010000011010001000110011 @
b00000000000000000000000000000111 A
b00000000000000000000000000001100 B
b00000000000000000000000000000111 C
b011110 E
0H
1L
b00000000000000000000000000000111 O
b00000000000000000000000000000000 P
b00011 Q
b00100 R
b00100 S
b000000000100 T
b000000000100 U
b0000000000100 V
b00000000010000011010 W
b000011010000000000100 X
b00000000000000000000000000001000 Y
b0110011 Z
b010 [
b0000000 \
1]
b00000000000000000000000000001100 ^
b00000000000000000000000000000111 _
#205
0>
#209
b001 '
b011 )
0*
b00000000000000000000000000001000 +
b00000000000000000000000000001010 ,
b0100001000100000001000000010000000100000 -
0/
b0100001000100000001000000010000000100000 1
b0100001000100000001000000010000000100000 3
b0100001001000101010100010010000000100000 5
b0100001000100000001000000010000000100000 7
19
b00000000000000000000000000001010 <
1>
b00000000000000100000010001100011 @
b00000000000000000000000000001000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
b000100 E
1H
0L
b00000000000000000000000000000000 O
b00100 Q
b00000 R
b01000 S
b000000000000 T
b000000001000 U
b0000000001000 V
b00000000000000100000 W
b000100000000000000000 X
b00000000000000000000000000001010 Y
b1100011 Z
b000 [
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
b00000000000000000000000000000000 e
#213
0>
#217
b010 '
b000 )
1*
b00000000000000000000000000000000 +
b0101001000100000001000000010000000100000 -
1/
b0101001000100000001000000010000000100000 1
b0101001000100000001000000010000000100000 3
b0101001101001100010101000010000000100000 5
b0101001000100000001000000010000000100000 7
09
0:
b00000000000000000000000000000001 ;
b00000000000000000000000000001011 <
0=
1>
b00000000001000111010001000110011 @
b00000000000000000000000000001010 A
b00000000000000000000000000000011 B
b00000000000000000000000000000101 C
b011110 E
0H
1L
b00000000000000000000000000000101 O
b00000000000000000000000000000001 P
b00111 Q
b00010 R
b00100 S
b000000000010 T
b000000000100 U
b0000000000100 V
b00000000001000111010 W
b000111010000000000010 X
b00000000000000000000000000001011 Y
b0110011 Z
b010 [
b00000000000000000000000000000011 ^
b00000000000000000000000000000101 _
1`
#221
0>
#225
b000 '
b00000000000000000000000000001011 ,
b0100000101000100010001000010000000100000 5
b00000000000000000000000000001100 ;
b00000000000000000000000000001100 <
1>
b00000000010100100000001110110011 @
b00000000000000000000000000001011 A
b00000000000000000000000000000001 B
b00000000000000000000000000001011 C
b011011 E
1J
0L
b00000000000000000000000000001011 O
b00000000000000000000000000001100 P
b00100 Q
b00101 R
b00111 S
b000000000101 T
b000000000111 U
b0100000000110 V
b00000000010100100000 W
b000100000100000000100 X
b00000000000000000000000000001100 Y
b000 [
b00000000000000000000000000000001 ^
b00000000000000000000000000001011 _
b00000000000000000000000000000001 e
#229
0>
#233
b001 '
b00000000000000000000000000001100 ,
b0101001101010101010000100010000000100000 5
b00000000000000000000000000000111 ;
b00000000000000000000000000001101 <
1>
b01000000001000111000001110110011 @
b00000000000000000000000000001100 A
b00000000000000000000000000001100 B
b00000000000000000000000000000101 C
b011100 E
0J
1K
b00000000000000000000000000000101 O
b00000000000000000000000000000111 P
b00111 Q
b00010 R
b010000000010 T
b010000000111 U
b0110000000110 V
b01000000001000111000 W
b000111000010000000010 X
b00000000000000000000000000001101 Y
b0100000 \
0]
b00000000000000000000000000001100 ^
b00000000000000000000000000000101 _
0`
b00000000000000000000000000001100 h
#237
0>
#241
1&
b000 '
1(
b010 )
0*
b00000000000000000000000001010100 +
b00000000000000000000000000100010 ,
b0101001100100000001000000010000000100000 -
0/
b0101001100100000001000000010000000100000 1
b0101001100100000001000000010000000100000 3
b0101001101010111001000000010000000100000 5
b0101001100100000001000000010000000100000 7
b00000000000000000000000001100000 ;
b00000000000000000000000000001110 <
1>
b00000100011100011010101000100011 @
b00000000000000000000000000001101 A
b00000000000000000000000000000111 C
b010001 E
1G
0K
b00000000000000000000000001010100 O
b00000000000000000000000001100000 P
b00011 Q
b00111 R
b10100 S
b000001000111 T
b000001010100 U
b0000001010100 V
b00000100011100011010 W
b000011010100001000110 X
b00000000000000000000000000001110 Y
b0100011 Z
b010 [
b0000010 \
b00000000000000000000000001010100 _
1`
b00000000000000000000000000000111 h
#245
0>
#249
b01 %
0&
b001 )
1*
b00000000000000000000000001100000 +
b00000000000000000000000000100110 ,
b0100100100100000001000000010000000100000 -
10
b0100100100100000001000000010000000100000 1
b0100100100100000001000000010000000100000 3
b0100110001010111001000000010000000100000 5
b0100100100100000001000000010000000100000 7
b00000000000000000000000000001111 <
1>
b00000110000000000010000100000011 @
b00000000000000000000000000001110 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000111 D
b001100 E
1F
0G
b00000000000000000000000001100000 O
b00000000000000000000000000000111 P
b00000 Q
b00000 R
b00010 S
b000001100000 T
b000001100010 U
b0000001100010 V
b00000110000000000010 W
b000000010000001100000 X
b00000000000000000000000000001111 Y
b0000011 Z
b0000011 \
b00000000000000000000000000000000 ^
b00000000000000000000000001100000 _
#253
0>
#257
b00 %
0(
b000 )
b00000000000000000000000000000000 +
b00000000000000000000000000001111 ,
b0101001000100000001000000010000000100000 -
1/
00
b0101001000100000001000000010000000100000 1
b0101001000100000001000000010000000100000 3
b0100000101000100010001000010000000100000 5
b0101001000100000001000000010000000100000 7
b00000000000000000000000000010010 ;
b00000000000000000000000000010000 <
1>
b00000000010100010000010010110011 @
b00000000000000000000000000001111 A
b00000000000000000000000000000111 B
b00000000000000000000000000001011 C
b00000000000000000000000000000000 D
b011011 E
0F
1J
b00000000000000000000000000001011 O
b00000000000000000000000000010010 P
b00010 Q
b00101 R
b01001 S
b000000000101 T
b000000001001 U
b0100000001000 V
b00000000010100010000 W
b000010000100000000100 X
b00000000000000000000000000010000 Y
b0110011 Z
b000 [
b0000000 \
1]
b00000000000000000000000000000111 ^
b00000000000000000000000000001011 _
b00000000000000000000000000000111 c
#261
0>
#265
b10 %
b101 )
b00000000000000000000000000001000 +
b00000000000000000000000000010010 ,
b0100101000100000001000000010000000100000 -
0/
b0100101000100000001000000010000000100000 1
b0100101000100000001000000010000000100000 3
b0100101001000001010011000010000000100000 5
b0100101000100000001000000010000000100000 7
19
1:
b00000000000000000000000000000000 ;
b00000000000000000000000000010010 <
1=
1>
b00000000100000000000000111101111 @
b00000000000000000000000000010000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
b000010 E
1I
0J
b00000000000000000000000000000000 O
b00000000000000000000000000010000 P
b00000 Q
b01000 R
b00011 S
b000000001000 T
b000000000011 U
b0100000000010 V
b00000000100000000000 W
b000000000000000001000 X
b00000000000000000000000000010010 Y
b1101111 Z
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
0`
b00000000000000000000000000010010 j
#269
0>
#273
b00 %
b000 )
b00000000000000000000000000000000 +
b0101001000100000001000000010000000100000 -
1/
b0101001000100000001000000010000000100000 1
b0101001000100000001000000010000000100000 3
b0100000101000100010001000010000000100000 5
b0101001000100000001000000010000000100000 7
09
0:
b00000000000000000000000000011001 ;
b00000000000000000000000000010011 <
0=
1>
b00000000100100010000000100110011 @
b00000000000000000000000000010010 A
b00000000000000000000000000000111 B
b00000000000000000000000000010010 C
b011011 E
0I
1J
b00000000000000000000000000010010 O
b00000000000000000000000000011001 P
b00010 Q
b01001 R
b00010 S
b000000001001 T
b000000000010 U
b0000000000010 V
b00000000100100010000 W
b000010000100000001000 X
b00000000000000000000000000010011 Y
b0110011 Z
b00000000000000000000000000000111 ^
b00000000000000000000000000010010 _
1`
b00000000000000000000000000010000 d
#277
0>
#281
1&
1(
b010 )
0*
b00000000000000000000000000100000 +
b00000000000000000000000000011011 ,
b0101001100100000001000000010000000100000 -
0/
b0101001100100000001000000010000000100000 1
b0101001100100000001000000010000000100000 3
b0101001101010111001000000010000000100000 5
b0101001100100000001000000010000000100000 7
b00000000000000000000000000110000 ;
b00000000000000000000000000010100 <
1>
b00000010001000011010000000100011 @
b00000000000000000000000000010011 A
b00000000000000000000000000010000 B
b00000000000000000000000000011001 C
b010001 E
1G
0J
b00000000000000000000000000100000 O
b00000000000000000000000000110000 P
b00011 Q
b00010 R
b00000 S
b000000100010 T
b000000100000 U
b0000000100000 V
b00000010001000011010 W
b000011010000000100010 X
b00000000000000000000000000010100 Y
b0100011 Z
b010 [
b0000001 \
0]
b00000000000000000000000000010000 ^
b00000000000000000000000000100000 _
b00000000000000000000000000011001 c
#285
0>
#289
0&
b001 '
0(
b011 )
b00000000000000000000000000000000 +
b00000000000000000000000000010100 ,
b0100001000100000001000000010000000100000 -
b0100001000100000001000000010000000100000 1
b0100001000100000001000000010000000100000 3
b0100001001000101010100010010000000100000 5
b0100001000100000001000000010000000100000 7
19
1:
b00000000000000000000000000000000 ;
1=
1>
b00000000001000010000000001100011 @
b00000000000000000000000000010100 A
b00000000000000000000000000011001 B
b000100 E
0G
1H
b00000000000000000000000000011001 O
b00000000000000000000000000000000 P
b00010 Q
b000000000010 T
b000000000000 U
b0000000000000 V
b00000000001000010000 W
b000010000000000000010 X
b1100011 Z
b000 [
b0000000 \
1]
b00000000000000000000000000011001 ^
b00000000000000000000000000011001 _
0`
#293
0>
#297
1>
#301
0>
#305
1>
#309
0>
#313
1>
#317
0>
#321
1>
#325
0>
#329
1>
#333
0>
#337
1>
#341
0>
#345
1>
#349
0>
#353
1>
#357
0>
#361
1>
#365
0>
#369
1>
#373
0>
#377
1>
#381
0>
#385
1>
#389
0>
#393
1>
#397
0>
#401
1>
#405
0>
#409
1>
#413
0>
#417
1>
#421
0>
#425
1>
#429
0>
#433
1>
#437
0>
#441
1>
#445
0>
#449
1>
#453
0>
#457
1>
#461
0>
#465
1>
#469
0>
#473
1>
#477
0>
#481
1>
#485
0>
#489
1>
#493
0>
#497
1>
#501
0>
#505
1>
#509
0>
#513
1>
#517
0>
#521
1>
#525
0>
#529
1>
#533
0>
#537
1>
#541
0>
#545
